

CREATE COMPUTE MODULE deleteEmployees_DeleteEmployee
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		Set OutputRoot.JSON.Data.EmployeeResponse.DBResp.RowsRetrieved = 0;
		Set OutputRoot.JSON.Data.EmployeeResponse.DBResp.RowsAdded = 0;
		Set OutputRoot.JSON.Data.EmployeeResponse.DBResp.RowsUpdated = 0;
		Set OutputRoot.JSON.Data.EmployeeResponse.DBResp.RowsDeleted = 0;
		Set OutputRoot.JSON.Data.EmployeeResponse.DBResp.SQLCODE_Errorcode = 0;
		Set OutputRoot.JSON.Data.EmployeeResponse.DBResp.SQLSTATE_SQLState = '';
		Set OutputRoot.JSON.Data.EmployeeResponse.DBResp.SQL_Error_Message = '';
		
		-- How many records? 
		SET OutputRoot.JSON.Data.EmployeeResponse.Employee[] = (SELECT
		  R.* 
		   FROM Database.HRDB.IIBADMIN.EMPLOYEE AS R
		   WHERE R.EMPNO = InputRoot.JSON.Data.Employee.Item[1].EMPNO);
		   
		IF SQLCODE = 0 THEN 
			-- Set number deleted
         	Set OutputRoot.JSON.Data.EmployeeResponse.DBResp.RowsDeleted = CARDINALITY(OutputRoot.JSON.Data.EmployeeResponse.Employee[]);
		END IF;
		
		DELETE FROM Database.HRDB.IIBADMIN.EMPLOYEE AS DEL_EMP
		  WHERE DEL_EMP.EMPNO=InputRoot.JSON.Data.Employee.Item[1].EMPNO; 
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
