

CREATE COMPUTE MODULE basicflow_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		DECLARE TEST CHAR;
		--CALL CopyMessageHeaders();
		--CALL CopyEntireMessage();
		-- Set OutputRoot = InputRoot; THis is a change
		Set OutputRoot.JSON.Data.DBResp.RowsRetrieved = 0;
		Set OutputRoot.JSON.Data.DBResp.RowsAdded = 0;
		Set OutputRoot.JSON.Data.DBResp.RowsUpdated = 0;
		Set OutputRoot.JSON.Data.DBResp.RowsDeleted = 0;
		Set OutputRoot.JSON.Data.DBResp.SQLCODE_Errorcode = 0;
		Set OutputRoot.JSON.Data.DBResp.SQLSTATE_SQLState = '';
		Set OutputRoot.JSON.Data.DBResp.SQL_Error_Message = '';
	
		
		  INSERT INTO Database.HRDB.IIBADMIN.EMPLOYEE (EMPNO,FIRSTNME,MIDINIT,LASTNAME,WORKDEPT,PHONENO,HIREDATE,JOB,EDLEVEL,SEX,BIRTHDATE,SALARY,BONUS,COMM)
                  VALUES (InputRoot.JSON.Data.Employee.Item[1].EMPNO,
                          InputRoot.JSON.Data.Employee.Item[1].FIRSTNME,
                          InputRoot.JSON.Data.Employee.Item[1].MIDINIT,
                          InputRoot.JSON.Data.Employee.Item[1].LASTNAME,
                          InputRoot.JSON.Data.Employee.Item[1].WORKDEPT,
                          InputRoot.JSON.Data.Employee.Item[1].PHONENO,
                          InputRoot.JSON.Data.Employee.Item[1].HIREDATE,
                          InputRoot.JSON.Data.Employee.Item[1].JOB,
                          InputRoot.JSON.Data.Employee.Item[1].EDLEVEL,
                          InputRoot.JSON.Data.Employee.Item[1].SEX,
                          InputRoot.JSON.Data.Employee.Item[1].BIRTHDATE,
                          InputRoot.JSON.Data.Employee.Item[1].SALARY,
                          InputRoot.JSON.Data.Employee.Item[1].BONUS,
                          InputRoot.JSON.Data.Employee.Item[1].COMM);
         
         IF SQLCODE = 0 THEN 
         	Set OutputRoot.JSON.Data.DBResp.RowsAdded = 1;
         ELSE
         	UPDATE Database.HRDB.IIBADMIN.EMPLOYEE AS UPDATE_EMP 
         	       SET FIRSTNME = InputRoot.JSON.Data.Employee.Item[1].FIRSTNME,
                       MIDINIT = InputRoot.JSON.Data.Employee.Item[1].MIDINIT,
                       LASTNAME = InputRoot.JSON.Data.Employee.Item[1].LASTNAME,
                       WORKDEPT = InputRoot.JSON.Data.Employee.Item[1].WORKDEPT,
                       PHONENO = InputRoot.JSON.Data.Employee.Item[1].PHONENO,
                       HIREDATE = InputRoot.JSON.Data.Employee.Item[1].HIREDATE,
                       JOB = InputRoot.JSON.Data.Employee.Item[1].JOB,
                       EDLEVEL = InputRoot.JSON.Data.Employee.Item[1].EDLEVEL,
                       SEX = InputRoot.JSON.Data.Employee.Item[1].SEX,
                       BIRTHDATE = InputRoot.JSON.Data.Employee.Item[1].BIRTHDATE,
                       SALARY = InputRoot.JSON.Data.Employee.Item[1].SALARY,
                       BONUS = InputRoot.JSON.Data.Employee.Item[1].BONUS,
                       COMM = InputRoot.JSON.Data.Employee.Item[1].COMM
                   WHERE UPDATE_EMP.EMPNO=InputRoot.JSON.Data.Employee.Item[1].EMPNO; 
            Set OutputRoot.JSON.Data.DBResp.RowsUpdated = 1;
         END IF;
        
        -- return SQL response values 
           
        Set OutputRoot.JSON.Data.DBResp.SQLCODE_Errorcode = SQLCODE;
		Set OutputRoot.JSON.Data.DBResp.SQLSTATE_SQLState = SQLSTATE;
		Set OutputRoot.JSON.Data.DBResp.SQL_Error_Message = SQLERRORTEXT;
		
		-- Pass Employee matching record(s) back
		
		SET OutputRoot.JSON.Data.EmployeeResponse[] = (SELECT
		  R.* 
		   FROM Database.HRDB.IIBADMIN.EMPLOYEE AS R 
		   WHERE R.EMPNO = InputRoot.JSON.Data.Employee.Item[1].EMPNO);
		
		-- Pass All Employee records back in response 
			
		SET OutputRoot.JSON.Data.EmployeeResponse[] = (SELECT
		  R.* 
		   FROM Database.HRDB.IIBADMIN.EMPLOYEE AS R);
		
		RETURN TRUE;
	END;

 
         
         
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
